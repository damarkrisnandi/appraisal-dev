import{a as p}from"./chunk-YLUK2ZRW.js";import{a as E}from"./chunk-XNS2ANDN.js";import{a as D}from"./chunk-OQKDZ6KP.js";import{c as o,h as a,o as $}from"./chunk-3RUIS27I.js";import{m as y}from"./chunk-NXN4P4DR.js";import{a as S}from"./chunk-QASMVVIP.js";import{a as f}from"./chunk-BUA7TEAX.js";import{ma as g,qa as b}from"./chunk-22342MAH.js";import{H as c,Z as h,a as m,b as u,ca as n,da as v,fb as s}from"./chunk-QSF35MWG.js";var F=class d{constructor(e,t,i,l,r){this.spinnerService=e;this.employeeService=t;this.router=i;this.confirmDialog=l;this.messageService=r;this.setSpinner(),this.setSearchCategory(),this.setupFormListeners(),this.populateList()}fb=v($);state={$dataList:s([]),$dataLoading:s(!1),$selectData:s(null),$loading:s(!1),$pagingInfo:s(new D),$employeeWrapper:s(null),$totalRowCount:s(1),$optionsCategory:s([]),$selectedCategory:s(null),$searchText:s(""),$optionDirektorat:s([]),$optionDivision:s([]),$optionDepartment:s([]),$optionPosition:s([]),$optionUnit:s([]),$optionLevel:s([]),$optionStatus:s([]),$mode:s(null),$isRekamDisabled:s(!1),$isUbahDisabled:s(!1),$isSimpanDisabled:s(!1),$isHapusDisabled:s(!1),$isResetDisabled:s(!1)};$dataList=this.state.$dataList.asReadonly();$dataLoading=this.state.$dataLoading.asReadonly();$pagingInfo=this.state.$pagingInfo.asReadonly();$totalRowCount=this.state.$totalRowCount.asReadonly();$cols=s([{field:"noEmployee",header:"No Employee"},{field:"fullName",header:"Name"},{field:"directorateDescription",header:"Directorate"},{field:"divisionDescription",header:"Division"},{field:"departmentDescription",header:"Department"},{field:"positionDescription",header:"Position"},{field:"unitDescription",header:"Unit"},{field:"levelDescription",header:"Level"},{field:"status",header:"Status"}]).asReadonly();$optionDirektorat=this.state.$optionDirektorat.asReadonly();$optionDivision=this.state.$optionDivision.asReadonly();$optionDepartment=this.state.$optionDepartment.asReadonly();$optionPosition=this.state.$optionPosition.asReadonly();$optionUnit=this.state.$optionUnit.asReadonly();$optionLevel=this.state.$optionLevel.asReadonly();$optionStatus=this.state.$optionStatus.asReadonly();$optionsCategory=this.state.$optionsCategory.asReadonly();$selectedCategory=this.state.$selectedCategory.asReadonly();$searchText=this.state.$searchText.asReadonly();$employeeWrapper=this.state.$employeeWrapper.asReadonly();$selectData=this.state.$selectData.asReadonly();$mode=this.state.$mode.asReadonly();$isRekamDisabled=this.state.$isRekamDisabled.asReadonly();$isUbahDisabled=this.state.$isUbahDisabled.asReadonly();$isSimpanDisabled=this.state.$isSimpanDisabled.asReadonly();$isHapusDisabled=this.state.$isHapusDisabled.asReadonly();$isResetDisabled=this.state.$isResetDisabled.asReadonly();$employeeForm=s(this.fb.group({noEmployee:new a({value:null,disabled:!1},[o.required]),username:new a({value:"",disabled:!1},[o.required]),employeeName:new a({value:"",disabled:!1},[o.required]),directorate:new a({value:null,disabled:!1},[o.required]),division:new a({value:null,disabled:!0},[o.required]),department:new a({value:null,disabled:!0},[o.required]),position:new a({value:null,disabled:!0},[o.required]),unit:new a({value:null,disabled:!0},[o.required]),level:new a({value:null,disabled:!0},[o.required]),status:new a({value:null,disabled:!0},[o.required]),note:new a("")})).asReadonly();$searchForm=s(this.fb.group({category:new a({value:null,disabled:!1}),searchInput:new a({value:"",disabled:!1}),directorate:new a({value:null,disabled:!1}),division:new a({value:null,disabled:!1}),department:new a({value:null,disabled:!1}),position:new a({value:null,disabled:!1}),unit:new a({value:null,disabled:!1}),level:new a({value:null,disabled:!1})})).asReadonly();setSpinner(){S(this.state.$loading).subscribe(e=>e?this.spinnerService.show():this.spinnerService.hide())}populateList(){this.state.$dataLoading.set(!0),c(1e3).subscribe(()=>{this.btnCondition("default"),this.getEmployeeList(),this.state.$dataLoading.set(!1)})}setOptionList(){this.setOptionDirektorat(),this.setOptionDivision(),this.setOptionDepartment(),this.setOptionPosition(),this.setOptionUnit(),this.setOptionLevel(),this.setOptionStatus()}setSearchCategory(){this.state.$optionsCategory.set([{label:"Semua",value:"all"},{label:"Name",value:"fullName"}])}setOptionDirektorat(){this.employeeService.getDirectorateList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionDirektorat.set(t)}else console.error("Failed to fetch directorate list:",e.message)},e=>{console.error("Error fetching directorate list:",e)})}setOptionDivision(){this.employeeService.getDivisionList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionDivision.set(t)}else console.error("Failed to fetch division list:",e.message)},e=>{console.error("Error fetching division list:",e)})}setOptionDepartment(){this.employeeService.getDepartmentList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionDepartment.set(t)}else console.error("Failed to fetch department list:",e.message)},e=>{console.error("Error fetching department list:",e)})}setOptionPosition(){this.employeeService.getPositionList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionPosition.set(t)}else console.error("Failed to fetch position list:",e.message)},e=>{console.error("Error fetching position list:",e)})}setOptionUnit(){this.employeeService.getUnitList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionUnit.set(t)}else console.error("Failed to fetch unit list:",e.message)},e=>{console.error("Error fetching unit list:",e)})}setOptionLevel(){this.employeeService.getLevelList().subscribe(e=>{if(e.status){let t=e.object.map(i=>({label:i.label,value:i.value}));this.state.$optionLevel.set(t)}else console.error("Failed to fetch level list:",e.message)},e=>{console.error("Error fetching level list:",e)})}setOptionStatus(){this.state.$optionStatus.set([{label:"active",value:1},{label:"inactive",value:0}])}getEmployeeList(){this.state.$dataLoading.set(!0);let e={wrapper:this.state.$employeeWrapper(),pagingInfo:this.state.$pagingInfo(),totalRowCount:this.state.$totalRowCount()};this.employeeService.getEmployeeList(e).subscribe(t=>{if(t.status){let i=t.object.dataList;this.state.$dataList.set(i),this.state.$pagingInfo.set(t.object.pagingInfo),this.state.$totalRowCount.set(t.object.totalRowCount||0)}else console.error("Failed to fetch employee list.");this.state.$dataLoading.set(!1)},t=>{console.error("Error fetching employee list:",t)})}onLazyLoad(e){this.state.$pagingInfo.set(u(m({},this.$pagingInfo()),{currentPage:Math.floor(e.first/e.rows)+1,pageSize:e.rows})),this.getEmployeeList()}setupFormListeners(){let e=this.$employeeForm();e.get("directorate")?.valueChanges.subscribe(t=>{let i=e.get("division");t?i?.enable():this.resetForm(["division","department","position","unit","level","status"])}),e.get("division")?.valueChanges.subscribe(t=>{let i=e.get("department");t?i?.enable():this.resetForm(["department","position","unit","level","status"])}),e.get("department")?.valueChanges.subscribe(t=>{let i=e.get("position");t?i?.enable():this.resetForm(["position","unit","level","status"])}),e.get("position")?.valueChanges.subscribe(t=>{let i=e.get("unit");t?i?.enable():this.resetForm(["unit","level","status"])}),e.get("unit")?.valueChanges.subscribe(t=>{let i=e.get("level");t?i?.enable():this.resetForm(["level","status"])}),e.get("level")?.valueChanges.subscribe(t=>{let i=e.get("status");t?i?.enable():this.resetForm(["status"])})}resetForm(e){let t=this.$employeeForm();e.forEach(i=>{t.get(i)?.reset(),t.get(i)?.disable()})}resetSearchForm(e){let t=this.$searchForm();e.forEach(i=>{t.get(i)?.reset(),this.getEmployeeList()})}resetAllForm(){this.$employeeForm().reset({username:"",employeeName:"",directorate:null,division:null,department:null,position:null,unit:null,level:null,status:null}),this.state.$mode.set(null),this.state.$selectData.set(null),this.btnCondition("default")}onSetSelected(e){e?(this.state.$selectData.set(e),this.$employeeForm().patchValue({noEmployee:this.$selectData()?.noEmployee,username:this.$selectData()?.userName,employeeName:this.$selectData()?.fullName,directorate:this.$selectData()?.directorateId,division:this.$selectData()?.divisionId,department:this.$selectData()?.departmentId,position:this.$selectData()?.positionId,unit:this.$selectData()?.unitId,level:this.$selectData()?.levelId,status:this.$selectData()?.status}),this.toggleFormControls("disable")):(this.state.$selectData.set(null),this.btnCondition("default"),this.resetForm(["noEmployee","employeeName","directorate","division","department","position","unit","level","status"]))}toggleFormControls(e){let t=this.$employeeForm();switch(e){case"enable":this.state.$mode()==="1"?(t.get("noEmployee")?.enable(),t.get("employeeName")?.enable(),t.get("directorate")?.enable()):Object.keys(t.controls).forEach(i=>{t.get(i)?.enable()});break;case"disable":Object.keys(t.controls).forEach(i=>{t.get(i)?.disable()});break;default:console.error("Invalid action:",e)}}onRekamForm(){this.resetAllForm(),this.state.$mode.set("1"),this.toggleFormControls("enable"),this.router.navigate(["/employee-mapping/form"])}onBackClick(){this.onCancelForm(),this.router.navigate(["/employee-mapping"])}onUbahForm(){this.state.$mode.set("2"),console.log("Ubah Form"),this.toggleFormControls("enable"),this.router.navigate(["/employee-mapping/form"])}onViewForm(){this.state.$mode.set("3"),console.log("View Form"),this.toggleFormControls("disable"),this.router.navigate(["/employee-mapping/form"])}onHapusForm(){console.log("Hapus Form")}verifySaveForm(){let e=this.$employeeForm(),t=["noEmployee","employeeName","directorate","division","department","position","level","status"],i={noEmployee:"No Employee",employeeName:"Employee Name",directorate:"Directorate",division:"Division",department:"Department",position:"Position",level:"Level",status:"status"};for(let l of t)if(e.get(l)?.value===void 0)return console.log("form.get(field)?.value ",e.get(l)?.value),alert(`${i[l]} tidak boleh kosong.`),!1;return!0}onSaveForm(){if(this.verifySaveForm()){let e=this.$employeeForm(),t=new p;t.fullName=e.get("employeeName")?.value,t.noEmployee=e.get("noEmployee")?.value,t.directorateId=e.get("directorate")?.value,t.divisionId=e.get("division")?.value,t.departmentId=e.get("department")?.value,t.positionId=e.get("position")?.value,t.unitId=e.get("unit")?.value,t.levelId=e.get("level")?.value,t.status=e.get("status")?.value,this.state.$mode()==="1"?(this.spinnerService.show(),this.employeeService.saveEmployee(t).subscribe(i=>{i.status?(this.confirmDialog.confirm({message:"Berhasil Simpan data !",header:"Info",key:"ok",icon:"pi pi-exclamation-triangle",accept:()=>this.router.navigate(["/employee-mapping"])}),this.getEmployeeList(),this.spinnerService.hide()):(console.error("Failed to save employee:",i.message),this.spinnerService.hide())},i=>{console.error("Error saving employee:",i)})):this.state.$mode()==="2"&&(this.spinnerService.show(),this.employeeService.updateEmployee(t).subscribe(i=>{i.status?(this.confirmDialog.confirm({message:"Berhasil Edit data !",header:"Info",key:"ok",icon:"pi pi-exclamation-triangle",accept:()=>this.router.navigate(["/employee-mapping"])}),this.getEmployeeList(),this.spinnerService.hide()):this.messageService.add({severity:"error",summary:"Error",detail:"Failed to update employee."}),this.spinnerService.hide()},i=>{this.messageService.add({severity:"warn",summary:"Perhatian",detail:"Error updating employee:"}),this.spinnerService.hide()}))}}onDeleteEmployee(e){if(this.$selectData()){let t=this.$selectData()?.noEmployee;this.employeeService.deleteEmployee(t).subscribe(i=>{i.status?(alert("Employee deleted successfully."),this.getEmployeeList(),this.resetAllForm()):this.messageService.add({severity:"error",summary:"Error",detail:"Failed to delete employee "})},i=>{this.messageService.add({severity:"error",summary:"Error",detail:"Failed to delete employee "})})}else this.messageService.add({severity:"warn",summary:"Perhatian",detail:"Pilih data yang akan dihapus."})}onCancelForm(){this.router.navigate(["/"])}btnCondition(e){switch(e){case"default":this.state.$isRekamDisabled.set(!1),this.state.$isUbahDisabled.set(!1),this.state.$isHapusDisabled.set(!1),this.state.$isSimpanDisabled.set(!1);break;case"ubah":this.state.$isResetDisabled.set(!0);break;case"lihat":this.state.$isSimpanDisabled.set(!0),this.state.$isResetDisabled.set(!0);break;default:console.error("Invalid action:",e)}}onSearchBy(){let e=this.$searchForm(),t=new p;t.userName=e.get("noEmployee")?.value,t.fullName=e.get("employeeName")?.value,t.noEmployee=e.get("noEmployee")?.value,t.directorateId=e.get("directorate")?.value,t.divisionId=e.get("division")?.value,t.departmentId=e.get("department")?.value,t.positionId=e.get("position")?.value,t.unitId=e.get("unit")?.value,t.levelId=e.get("level")?.value;let i=e.get("category")?.value;i&&(i==="fullName"?t.fullName=e.get("searchInput")?.value:i==="all"&&(t.all=e.get("searchInput")?.value));let l={wrapper:t,pagingInfo:this.state.$pagingInfo(),totalRowCount:this.state.$totalRowCount()};this.employeeService.getEmployeeList(l).subscribe(r=>{if(r.status){let L=r.object.dataList;this.state.$dataList.set(L),this.state.$pagingInfo.set(r.object.pagingInfo),this.state.$totalRowCount.set(r.object.totalRowCount||0)}else this.messageService.add({severity:"warn",summary:"Perhatian",detail:"Failed to fetch employee list."})},r=>{this.messageService.add({severity:"warn",summary:"Perhatian",detail:"Error fetching employee list"})})}static \u0275fac=function(t){return new(t||d)(n(f),n(E),n(y),n(g),n(b))};static \u0275prov=h({token:d,factory:d.\u0275fac})};export{F as a};
